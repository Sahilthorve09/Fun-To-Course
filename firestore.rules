rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) && 
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['displayName', 'photoURL', 'enrolledCourses', 'updatedAt']);
      allow delete: if false;

      // Payments subcollection
      match /payments/{paymentId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && 
          request.resource.data.status == 'pending' &&
          request.resource.data.createdAt == request.time;
        allow update: if isOwner(userId) && 
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['status', 'transactionId', 'updatedAt']);
        allow delete: if false;
      }
    }

    // Courses collection
    match /courses/{courseId} {
      allow read: if true;
      allow write: if false;
    }
  }
} 